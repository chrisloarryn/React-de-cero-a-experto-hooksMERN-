{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","event","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","useDispatch","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","location","pathname","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49ffb82e.chunk.js","sourcesContent":["export const types = {\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n\n  eventSetActive: '[event] Set Active',\n  eventLogout: '[event] Logout Clean Active Event',\n\n  eventStartAddNew: '[event] Start Add New',\n  eventAddNew: '[event] Add new',\n  eventClearActiveEvent: '[event] Clear active event',\n  eventUpdated: '[event] Event Updated',\n  eventDeleted: '[event] Event Deleted',\n  eventLoaded: '[event] Event Loaded',\n\n  authCheckingFinish: '[auth] Finish Checking Login State',\n  authStartLogin: '[auth] Start Login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start Register',\n  authStartTokenRenew: '[auth] Start Token Renew',\n  authLogout: '[auth] Logout'\n}\n","import { types } from '../types/types'\n\nconst initialState = {\n  modalOpen: false\n}\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true\n      }\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false\n      }\n\n    default:\n      return state\n  }\n}\n","import { types } from '../types/types'\n\nconst initialState = {\n  events: [\n    /* \n    {\n      id: new Date().getTime(),\n      title: 'Cumpleaños del jefe',\n      start: moment().toDate(),\n      end: moment().add(2, 'hours').toDate(),\n      bgcolor: '#fafafa',\n      notes: 'Comprar el pastel',\n      user: {\n        _id: '123',\n        name: 'Cristobal'\n      }\n    }\n   */\n  ],\n  activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload\n      }\n\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload]\n      }\n\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null\n      }\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((e) =>\n          e.id === action.payload.id ? action.payload : e\n        )\n      }\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\n        activeEvent: null\n      }\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload]\n      }\n    case types.eventLogout:\n      return {\n        ...initialState\n      }\n    default:\n      return state\n  }\n}\n","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n  checking: true\r\n  // uid: null,\r\n  // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false\r\n      }\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      }\r\n    case types.authLogout:\r\n      return {\r\n        checking: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\n\nimport { uiReducer } from './uiReducer'\nimport { calendarReducer } from './calendarReducer'\nimport { authReducer } from './authReducer'\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer\n})\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer'\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n)\n","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`\r\n  if (method === 'GET') {\r\n    return fetch(url)\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n}\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`\r\n  const token = localStorage.getItem('token') || ''\r\n  if (method === 'GET') {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    })\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-token': token\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n}\r\n\r\nexport { fetchWithToken, fetchWithoutToken }\r\n","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) =>\r\n  events.map((event) => ({\r\n    ...event,\r\n    end: moment(event.end).toDate(),\r\n    start: moment(event.start).toDate()\r\n  }))\r\n","import Swal from 'sweetalert2'\nimport { fetchWithToken } from '../helpers/fetch'\nimport { prepareEvents } from '../helpers/prepareEvents'\nimport { types } from '../types/types'\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth\n    try {\n      const resp = await fetchWithToken('events', event, 'POST')\n      const body = await resp.json()\n      if (body.ok) {\n        event.id = body.event.id\n        event.user = {\n          _id: uid,\n          name\n        }\n        dispatch(eventAddNew(event))\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event\n})\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event\n})\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent\n})\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT')\n      const body = await resp.json()\n      if (body.ok) {\n        console.log(body.event)\n        dispatch(eventUpdated(event))\n      } else {\n        Swal.fire('Error', body.msg, 'error')\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event\n})\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { id } = getState().calendar.activeEvent\n    try {\n      const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE')\n      const body = await resp.json()\n      if (body.ok) {\n        dispatch(eventDeleted())\n      } else {\n        Swal.fire('Error', body.msg, 'error')\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted })\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken('events')\n      const body = await resp.json()\n      const events = prepareEvents(body.events)\n      dispatch(eventLoaded(events))\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events\n})\n\nexport const eventLogout = () => ({ type: types.eventLogout })\n","import Swal from 'sweetalert2'\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch'\r\nimport { types } from '../types/types'\r\nimport { eventLogout } from './events'\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchWithoutToken('auth', { email, password }, 'POST')\r\n    const body = await resp.json()\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name\r\n        })\r\n      )\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchWithoutToken(\r\n      'auth/new',\r\n      { email, password, name },\r\n      'POST'\r\n    )\r\n    const body = await resp.json()\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name\r\n        })\r\n      )\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchWithToken('auth/renew')\r\n    const body = await resp.json()\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(checkingFinish())\r\n    }\r\n  }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear()\r\n    dispatch(eventLogout())\r\n    dispatch(logout())\r\n  }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n","import { useState } from 'react'\r\n\r\n/**\r\n * @param  {} initialState={}\r\n */\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState)\r\n\r\n  const reset = (newFormState = initialState) => setValues(newFormState)\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n  return [values, handleInputChange, reset]\r\n}\r\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport Swal from 'sweetalert2'\n\nimport { startLogin, startRegister } from '../../actions/auth'\nimport { useForm } from './../../hooks/useForm'\n\nimport './login.css'\n\nexport const LoginScreen = () => {\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: 'chrisloarryn@gmail.com',\n    lPassword: '123456'\n  })\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: 'Christopher',\n    rEmail: 'crssnow2@gmail.com',\n    rPassword1: '123456',\n    rPassword2: '123456'\n  })\n  const dispatch = useDispatch()\n  const { lEmail, lPassword } = formLoginValues\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues\n  const handleLoginSubmit = (e) => {\n    e.preventDefault()\n    dispatch(startLogin(lEmail, lPassword))\n  }\n  const handleRegisterSubmit = (e) => {\n    e.preventDefault()\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire('Error', 'Passwords does not match', 'error')\n    }\n    dispatch(startRegister(rEmail, rPassword1, rName))\n  }\n  return (\n    <div className='container login-container'>\n      <div className='row'>\n        <div className='col-md-6 login-form-1'>\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLoginSubmit}>\n            <div className='form-group'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Correo'\n                name='lEmail'\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Contraseña'\n                name='lPassword'\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input type='submit' className='btnSubmit' value='Login' />\n            </div>\n          </form>\n        </div>\n\n        <div className='col-md-6 login-form-2'>\n          <h3>Registro</h3>\n          <form onSubmit={handleRegisterSubmit}>\n            <div className='form-group'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Nombre'\n                name='rName'\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='email'\n                className='form-control'\n                placeholder='Correo'\n                name='rEmail'\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Contraseña'\n                name='rPassword1'\n                value={rPassword1}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Repita la contraseña'\n                name='rPassword2'\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className='form-group'>\n              <input type='submit' className='btnSubmit' value='Crear cuenta' />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\n\nexport const Navbar = () => {\n  const { name } = useSelector((state) => state.auth)\n  const dispatch = useDispatch()\n  const handleLogout = () => {\n    dispatch(startLogout())\n  }\n  return (\n    <div className='navbar navbar-dark bg-dark mb-4'>\n      <span className='navbar-brand'>{name}</span>\n\n      <button className='btn btn-outline-danger' onClick={handleLogout}>\n        <i className='fas fa-sign-out-alt'></i>\n        <span> Salir</span>\n      </button>\n    </div>\n  )\n}\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total) => `+ Ver más (${total})`\n}\n","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n  const { title, user } = event\n\n  return (\n    <div>\n      <strong> {title} </strong>\n      <span>- {user.name} </span>\n    </div>\n  )\n}\n","import { types } from '../types/types'\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport moment from 'moment'\nimport Modal from 'react-modal'\nimport DateTimePicker from 'react-datetime-picker'\nimport Swal from 'sweetalert2'\n\nimport { uiCloseModal } from '../../actions/ui'\nimport {\n  eventStartAddNew,\n  eventClearActiveEvent,\n  eventStartUpdate\n} from '../../actions/events'\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}\nModal.setAppElement('#root')\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours') // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours')\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: nowPlus1.toDate()\n}\n\nexport const CalendarModal = () => {\n  const { modalOpen } = useSelector((state) => state.ui)\n  const { activeEvent } = useSelector((state) => state.calendar)\n  const dispatch = useDispatch()\n\n  const [dateStart, setDateStart] = useState(now.toDate())\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate())\n  const [titleValid, setTitleValid] = useState(true)\n\n  const [formValues, setFormValues] = useState(initEvent)\n\n  const { notes, title, start, end } = formValues\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent)\n    } else {\n      setFormValues(initEvent)\n    }\n  }, [activeEvent, setFormValues])\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    })\n  }\n\n  const closeModal = () => {\n    dispatch(uiCloseModal())\n    dispatch(eventClearActiveEvent())\n    setFormValues(initEvent)\n  }\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e)\n    setFormValues({\n      ...formValues,\n      start: e\n    })\n  }\n\n  const handleEndDateChange = (e) => {\n    setDateEnd(e)\n    setFormValues({\n      ...formValues,\n      end: e\n    })\n  }\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault()\n\n    const momentStart = moment(start)\n    const momentEnd = moment(end)\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire(\n        'Error',\n        'La fecha fin debe de ser mayor a la fecha de inicio',\n        'error'\n      )\n    }\n\n    if (title.trim().length < 2) {\n      return setTitleValid(false)\n    }\n\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues))\n    } else {\n      dispatch(eventStartAddNew(formValues))\n    }\n\n    setTitleValid(true)\n    closeModal()\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className='modal'\n      overlayClassName='modal-fondo'\n    >\n      <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\n      <hr />\n      <form className='container' onSubmit={handleSubmitForm}>\n        <div className='form-group'>\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={dateStart}\n            className='form-control'\n          />\n        </div>\n\n        <div className='form-group'>\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={dateEnd}\n            minDate={dateStart}\n            className='form-control'\n          />\n        </div>\n\n        <hr />\n        <div className='form-group'>\n          <label>Titulo y notas</label>\n          <input\n            type='text'\n            className={`form-control ${!titleValid && 'is-invalid'} `}\n            placeholder='Título del evento'\n            name='title'\n            autoComplete='off'\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id='emailHelp' className='form-text text-muted'>\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <textarea\n            type='text'\n            className='form-control'\n            placeholder='Notas'\n            rows='5'\n            name='notes'\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id='emailHelp' className='form-text text-muted'>\n            Información adicional\n          </small>\n        </div>\n\n        <button type='submit' className='btn btn-outline-primary btn-block'>\n          <i className='far fa-save'></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch()\n\n  const handleClickNew = () => {\n    dispatch(uiOpenModal())\n  }\n\n  return (\n    <button className='btn btn-primary fab' onClick={handleClickNew}>\n      <i className='fas fa-plus'></i>\n    </button>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events'\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch()\n\n  const handleDelete = () => {\n    dispatch(eventStartDelete())\n  }\n\n  return (\n    <button className='btn btn-danger fab-danger' onClick={handleDelete}>\n      <i className='fas fa-trash'></i>\n      <span> Borrar evento </span>\n    </button>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\n\nimport { Navbar } from '../ui/Navbar'\nimport { messages } from '../../helpers/calendar-messages-es'\nimport { CalendarEvent } from './CalendarEvent'\nimport { CalendarModal } from './CalendarModal'\n\nimport { uiOpenModal } from '../../actions/ui'\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport 'moment/locale/es'\nimport {\n  eventSetActive,\n  eventClearActiveEvent,\n  eventStartLoading\n} from '../../actions/events'\nimport { AddNewFab } from '../ui/AddNewFab'\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\n\nmoment.locale('es')\n\nconst localizer = momentLocalizer(moment)\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch()\n  const { events, activeEvent } = useSelector((state) => state.calendar)\n  const { uid } = useSelector((state) => state.auth)\n\n  const [lastView, setLastView] = useState(\n    localStorage.getItem('lastView') || 'month'\n  )\n\n  useEffect(() => {\n    dispatch(eventStartLoading())\n  }, [dispatch])\n\n  const onDoubleClick = (e) => {\n    // console.log(e);\n    dispatch(uiOpenModal())\n  }\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e))\n  }\n\n  const onViewChange = (e) => {\n    setLastView(e)\n    localStorage.setItem('lastView', e)\n  }\n\n  const onSelectSlot = (e) => {\n    // console.log(e)\n    dispatch(eventClearActiveEvent())\n  }\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    }\n\n    return {\n      style\n    }\n  }\n\n  return (\n    <div className='calendar-screen'>\n      <Navbar />\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor='start'\n        endAccessor='end'\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        view={lastView}\n        components={{\n          event: CalendarEvent\n        }}\n      />\n\n      <AddNewFab />\n\n      {activeEvent && <DeleteEventFab />}\n\n      <CalendarModal />\n    </div>\n  )\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Redirect to='/' /> : <Component {...props} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  localStorage.setItem('lastPath', rest.location.pathname)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\nimport { startChecking } from '../actions/auth'\nimport { PublicRoute } from './PublicRoute'\nimport { PrivateRoute } from './PrivateRoute'\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch()\n  const { checking, uid } = useSelector((state) => state.auth)\n\n  useEffect(() => {\n    dispatch(startChecking())\n  }, [dispatch])\n\n  if (checking) return <h5>Please wait...</h5>\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path='/login'\n            component={LoginScreen}\n            isAuthenticated={!!uid}\n          />\n          <PrivateRoute\n            exact\n            path='/'\n            component={CalendarScreen}\n            isAuthenticated={!!uid}\n          />\n\n          <Redirect to='/' />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport { store } from './store/store'\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CalendarApp } from './CalendarApp'\n\nimport './styles.css'\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'))\n"],"sourceRoot":""}